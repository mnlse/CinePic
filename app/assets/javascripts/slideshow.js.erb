// does not initialize itself - init with $.slideshow();

$.slideshow = function() {
  // initial variables

  var currentPos = 0;
  var maxPos = null;
  var maxLoadedPos = null;
  var minPos = 0;
  var images = [];
      images.isDefined = function(x) {
        return !(typeof this[x] === "undefined");
      };
  var responseJSON = [];
  var initSlidesRan = false;

  var el = {
    prevSlide: '.left',
    nextSlide: '.right',
    clickSlide: '.slideshow-click',
    slidesContainer: '.slideshow-all-images',
  };

  var cursor = {
    leftArrow: 'url("<%= asset_path("left_cursor.png") %>") 48 12, w-resize',
    rightArrow: 'url("<%= asset_path("right_cursor.png") %>") 0 12, e-resize',
    impossible: 'url("<%= asset_path("impossible_action_cursor.png") %>") 15 15, not-allowed'
  };

  var cls = {
    slide: 'slideshow-image',
    displaySlide: 'sl-disp',
    leftSlide: 'sl-left',
    rightSlide: 'sl-right'
  };

  // -----------------------------------

  var slideChanged = function() {
    var updateHref = function() {
      $(el.clickSlide).attr("href", responseJSON[currentPos].link_url);
      if(responseJSON[currentPos].new_tab) {
        $(el.clickSlide).attr("target", "_blank");
      } else {
        $(el.clickSlide).attr("target", "_self");
      }
    };

    var dynamicImgLoader = function() {
      var loadImg = function(pos) {
        if(typeof responseJSON[pos] !== "undefined") {
          maxLoadedPos++;
          var img = $('<div>');
          img.addClass(cls.slide).addClass(cls.rightSlide);
          img.css("background-image", 'url("' + responseJSON[pos].pic_url) + '")';
          images.push(img);
          $(el.slidesContainer).append(images[maxLoadedPos]);
        }
      };

      if(maxPos !== maxLoadedPos) {
        loadImg(maxLoadedPos + 1);
      }
    };

    var updateCursors = function() {
      if(minPos === currentPos) {
        $(el.prevSlide).css("cursor", cursor.impossible);
      } else if (maxPos === currentPos) {
        $(el.nextSlide).css("cursor", cursor.impossible);
      } else {
        $(el.prevSlide).css("cursor", cursor.leftArrow);
        $(el.nextSlide).css("cursor", cursor.rightArrow);
      }
    };

    updateCursors();
    updateHref();
    dynamicImgLoader();
  };

  var switchSlide = function(direction) {
    if(direction === "next") {
      images[currentPos].removeClass(cls.displaySlide).addClass(cls.leftSlide);
      images[currentPos + 1].addClass(cls.displaySlide).removeClass(cls.rightSlide);
      currentPos = currentPos + 1;
      slideChanged();
    } else if(direction === "prev") {
      images[currentPos].removeClass(cls.displaySlide).addClass(cls.rightSlide);
      images[currentPos - 1].addClass(cls.displaySlide).removeClass(cls.leftSlide);
      currentPos = currentPos - 1;
      slideChanged();
    }
  };

  var listenToActions = function() {
    $(el.prevSlide).click(function(e) {
      e.stopPropagation();
      if( images.isDefined(currentPos - 1) ) {
        switchSlide("prev");
      }
    });
    $(el.nextSlide).click(function(e) {
      e.stopPropagation();
      if( images.isDefined(currentPos + 1) ) {
        switchSlide("next");
      }
    });
  };

  var initSlides = function() {
    for(i=0; i<3; i++) {
      currentImg = $("#sl_img" + i);
      currentImg.css("background-image", 'url("' + responseJSON[i].pic_url) + '")';
      images.push(currentImg);
    }

    images[0].addClass(cls.displaySlide);
    images[1].addClass(cls.rightSlide);
    images[2].addClass(cls.rightSlide);

    maxPos = responseJSON.length - 1;
    maxLoadedPos = 2;

    slideChanged();
    listenToActions();
    initSlidesRan = true;
  }

  var turboLinkFix = function() {
    // Reset some variables, reload images

    currentPos = 0;
    images.length = 0;

    for(i=0; i<3; i++) {
      currentImg = $("#sl_img" + i);
      currentImg.css("background-image", 'url("' + responseJSON[i].pic_url) + '")';
      images.push(currentImg);
    }
    $(el.nextSlide).off();
    $(el.prevSlide).off();
    listenToActions();
  }

  var init = function() {
    var slidesImg = $.getJSON('json/get_slideshow_imgs', function(data) {
        responseJSON = data;
        if(!initSlidesRan) {
          initSlides();
        } else {
          turboLinkFix();
        }
      });
  }
  init();
}
